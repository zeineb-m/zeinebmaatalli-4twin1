pipeline {
    agent any

    options {
        skipDefaultCheckout()
    }

    tools {
        jdk 'JAVA_HOME'
        maven 'M2_HOME'
    }

    environment {
        IMAGE_NAME = 'zeinebmaatalli/kaddem'               // Backend image
        FRONT_IMAGE = 'zeinebmaatalli/front-equipe'        // Frontend image
        DOCKER_USERNAME = 'zeinebmaatalli'
        DOCKER_PASSWORD = 'Zeineb123'
        COMPOSE_FILE = 'docker-compose.yml'
         NEXUS_REPO_URL = 'http://172.17.0.1:8081/repository/maven-releases/'
    }

    stages {
        stage('1. Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/zeineb-m/zeinebmaatalli-4twin1.git'
            }
        }

        stage('2. Check Maven Version') {
            steps {
                dir('zeinebmaatalli-4TWIN1-G6') {
                    sh 'mvn -version'
                }
            }
        }

        stage('3. Compile Project') {
            steps {
                dir('zeinebmaatalli-4TWIN1-G6') {
                    sh 'mvn clean compile'
                }
            }
        }

        stage('4. Run Tests') {
            steps {
                dir('zeinebmaatalli-4TWIN1-G6') {
                    sh 'mvn test'
                }
            }
        }

        stage('5. SonarQube Analysis') {
            steps {
                dir('zeinebmaatalli-4TWIN1-G6') {
                    sh '''
                        mvn sonar:sonar \
                        -Dsonar.login=f514da16352f623047c6a455cd05c197d7160295
                    '''
                }
            }
        }

        stage('6. Package Application') {
            steps {
                dir('zeinebmaatalli-4TWIN1-G6') {
                    sh 'mvn package -DskipTests'
                }
            }
        }

        // stage('7. Deploy to Nexus') {
        //     steps {
        //         dir('zeinebmaatalli-4TWIN1-G6') {
        //             sh 'mvn deploy -DskipTests'
        //         }
        //     }
        // }
stage('Deploy to Nexus') {
    steps {
        dir('zeinebmaatalli-4TWIN1-G6') {
            configFileProvider([configFile(fileId: '098840e5-3f3f-4eef-9684-cc667944fa7b', variable: 'MAVEN_SETTINGS')]) {
                sh """
                    mvn deploy \
                        -s $MAVEN_SETTINGS \
                        -DaltDeploymentRepository=dev::default::$NEXUS_REPO_URL \
                        -Dversion=1.0.0
                """
            }
        }
    }
}

        stage('8. Build Backend Docker Image') {
            steps {
                dir('zeinebmaatalli-4TWIN1-G6') {
                    sh 'docker build -t $IMAGE_NAME .'
                }
            }
        }

        stage('9. Build Frontend Docker Image') {
            steps {
                sh 'docker build -t $FRONT_IMAGE -f equipe/dockerfile equipe'
            }
        }

        stage('10. Push Docker Images to Docker Hub') {
            steps {
                sh '''
                    echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                    docker push $IMAGE_NAME
                    docker push $FRONT_IMAGE
                '''
            }
        }

        stage('11. Restart Services with Docker Compose') {
            steps {
                dir('zeinebmaatalli-4TWIN1-G6') {
                    sh '''
                        docker-compose -f $COMPOSE_FILE down || true
                        docker-compose -f $COMPOSE_FILE up -d --build
                    '''
                }
            }
        }
    }
}
